name: Create Preview Environment

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Create a new database
        run: |
          DB_NAME="pr-${{ github.event.number }}"
          gcloud sql databases create $DB_NAME --instance=${{ secrets.CLOUD_SQL_INSTANCE_CONNECTION_NAME }}
      
      - name: Run migrations
        run: |
          DB_NAME="pr-${{ github.event.number }}"
          python manage.py migrate --database=$DB_NAME
      
      - name: Build and push Docker images
        run: |
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/api-pr-${{ github.event.number }} -f api/Dockerfile .
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/dashboard-pr-${{ github.event.number }} -f dashboard/Dockerfile .
          gcloud auth configure-docker
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/api-pr-${{ github.event.number }}
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/dashboard-pr-${{ github.event.number }}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy api-pr-${{ github.event.number }} --image=gcr.io/${{ secrets.GCP_PROJECT_ID }}/api-pr-${{ github.event.number }} --platform=managed --region=us-central1 --set-env-vars=DB_NAME=pr-${{ github.event.number }},DB_USER=${{ secrets.DB_USER }},DB_PASSWORD=${{ secrets.DB_PASSWORD }},DB_HOST=${{ secrets.CLOUD_SQL_INSTANCE_CONNECTION_NAME }}
          gcloud run deploy dashboard-pr-${{ github.event.number }} --image=gcr.io/${{ secrets.GCP_PROJECT_ID }}/dashboard-pr-${{ github.event.number }} --platform=managed --region=us-central1

# name: Create Preview Environment

# on:
#   pull_request:
#     types: [opened, synchronize, reopened]

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Set up Cloud SDK
#         uses: google-github-actions/setup-gcloud@v1
#         with:
#           project_id: ${{ secrets.GCP_PROJECT_ID }}
#           service_account_key: ${{ secrets.GCP_SA_KEY }}

#       - name: Authenticate to GCP
#         run: |
#           echo ${{ secrets.GCP_SA_KEY }} | gcloud auth activate-service-account --key-file=-

#       - name: Create a new database
#         run: |
#           DB_NAME="pr-${{ github.event.number }}"
#           gcloud sql databases create $DB_NAME --instance=${{ secrets.CLOUD_SQL_INSTANCE_CONNECTION_NAME }}
     
#       - name: Run migrations
#         run: |
#           DB_NAME="pr-${{ github.event.number }}"
#           python manage.py migrate --database=$DB_NAME
     
#       - name: Build and push Docker images
#         run: |
#           docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/api-pr-${{ github.event.number }} -f api/Dockerfile .
#           docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/dashboard-pr-${{ github.event.number }} -f dashboard/Dockerfile .
#           gcloud auth configure-docker
#           docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/api-pr-${{ github.event.number }}
#           docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/dashboard-pr-${{ github.event.number }}

#       - name: Deploy to Cloud Run
#         run: |
#           gcloud run deploy api-pr-${{ github.event.number }} --image=gcr.io/${{ secrets.GCP_PROJECT_ID }}/api-pr-${{ github.event.number }} --platform=managed --region=us-east4 --set-env-vars=DB_NAME=pr-${{ github.event.number }},DB_USER=${{ secrets.DB_USER }},DB_PASSWORD=${{ secrets.DB_PASSWORD }},DB_HOST=${{ secrets.CLOUD_SQL_INSTANCE_CONNECTION_NAME }}
#           gcloud run deploy dashboard-pr-${{ github.event.number }} --image=gcr.io/${{ secrets.GCP_PROJECT_ID }}/dashboard-pr-${{ github.event.number }} --platform=managed --region=us-east4






# name: PR Preview Deployment

# on:
#   pull_request:
#     types: [opened, synchronize, reopened]

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Set up Google Cloud SDK
#         uses: google-github-actions/setup-gcloud@v1
#         with:
#           project_id: ${{ secrets.GCP_PROJECT_ID }}
#           service_account_key: ${{ secrets.GCP_SA_KEY }}
#           export_default_credentials: true

#       - name: Create PR database
#         run: |
#           DB_NAME="pr-${{ github.event.number }}"
#           gcloud sql databases create $DB_NAME --instance=$DB_INSTANCE
#           DB_USER="root"
#           DB_PASS="${{ secrets.DB_ROOT_PASSWORD }}"
#           gcloud sql users set-password $DB_USER --instance=$DB_INSTANCE --password=$DB_PASS
#         env:
#           DB_INSTANCE: ${{ secrets.DB_INSTANCE }}

#       - name: Run database migrations
#         run: |
#           DB_NAME="pr-${{ github.event.number }}"
#           # Assuming you have a migration script or command
#           ./run_migrations.sh $DB_NAME
#         env:
#           DB_INSTANCE: ${{ secrets.DB_INSTANCE }}
#           DB_USER: root
#           DB_PASS: ${{ secrets.DB_ROOT_PASSWORD }}

#       - name: Build and deploy API
#         run: |
#           API_IMAGE="gcr.io/${{ secrets.GCP_PROJECT_ID }}/api-pr-${{ github.event.number }}"
#           docker build -t $API_IMAGE -f api/Dockerfile .
#           docker push $API_IMAGE
#           gcloud run deploy api-pr-${{ github.event.number }} \
#             --image $API_IMAGE \
#             --platform managed \
#             --region ${{ secrets.GCP_REGION }} \
#             --set-env-vars DATABASE_URL=mysql://root:${{ secrets.DB_ROOT_PASSWORD }}@/${{ DB_INSTANCE }}/pr-${{ github.event.number }}
     
#       - name: Build and deploy Dashboard
#         run: |
#           DASHBOARD_IMAGE="gcr.io/${{ secrets.GCP_PROJECT_ID }}/dashboard-pr-${{ github.event.number }}"
#           docker build -t $DASHBOARD_IMAGE -f dashboard/Dockerfile .
#           docker push $DASHBOARD_IMAGE
#           gcloud run deploy dashboard-pr-${{ github.event.number }} \
#             --image $DASHBOARD_IMAGE \
#             --platform managed \
#             --region ${{ secrets.GCP_REGION }} \
#             --set-env-vars API_URL=https://api-pr-${{ github.event.number }}-<project_id>.run.app


